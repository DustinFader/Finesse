generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model categories {
  category_id                               Int        @id @default(autoincrement())
  name                                      String     @unique @db.VarChar(255)
  payment_id                                Int?
  payments_categories_payment_idTopayments  payments?  @relation("categories_payment_idTopayments", fields: [payment_id], references: [payment_id], onDelete: Cascade, onUpdate: NoAction)
  payments_payments_category_idTocategories payments[] @relation("payments_category_idTocategories")
}

model payments {
  payment_id                                  Int          @id @default(autoincrement())
  user_id                                     Int?
  category_id                                 Int?
  name                                        String       @db.VarChar(255)
  amount                                      Int
  is_additive                                 Boolean
  categories_categories_payment_idTopayments  categories[] @relation("categories_payment_idTopayments")
  categories_payments_category_idTocategories categories?  @relation("payments_category_idTocategories", fields: [category_id], references: [category_id], onDelete: Cascade, onUpdate: NoAction)
  users_payments_user_idTousers               users?       @relation("payments_user_idTousers", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_users_payment_idTopayments            users[]      @relation("users_payment_idTopayments")
}

model users {
  id                                  Int        @id @default(autoincrement())
  email                               String     @db.VarChar(255)
  password                            String     @db.VarChar(255)
  payment_id                          Int?
  payments_payments_user_idTousers    payments[] @relation("payments_user_idTousers")
  payments_users_payment_idTopayments payments?  @relation("users_payment_idTopayments", fields: [payment_id], references: [payment_id], onDelete: Cascade, onUpdate: NoAction)
}
